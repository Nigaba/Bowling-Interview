services:
  # Backend: Spring Boot (Java), Postgres
  backend:
    build: backend
    restart: always
    # secrets:
    #   - db-password
    # environment:
    #   - POSTGRES_DB=example
    ports:
      - 8080:8080
    networks:
      - node-spring
  #     - spring-postgres
  #   depends_on:
  #     - db
  # db:
  #   image: postgres:alpine
  #   environment:
  #     - POSTGRES_DB=example
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
  #   restart: always
  #   ports:
  #     - 5432:5432
  #   secrets:
  #     - db-password
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   networks:
  #     - spring-postgres
  # Frontend: React (Typescript)
  frontend:
    image: node:lts-alpine
    working_dir: /home/node/app
    user: node
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/home/node/app
      - /project/node_modules
    networks:
      - node-spring
    depends_on:
      - backend
    command: "yarn start"
# volumes:
#   db-data:
secrets:
  db-password:
    file: db/password.txt
networks:
  node-spring:
  spring-postgres: